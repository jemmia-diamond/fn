import { safeValue } from "src/services/utils/data-mappers";

export const mapSalesOrderToDatabase = (salesOrder) => {
  return {
    name: salesOrder?.name || null,
    owner: salesOrder?.owner || null,
    creation: safeValue(salesOrder?.creation,"date"),
    modified: safeValue(salesOrder?.modified,"date"),
    modified_by: safeValue(salesOrder?.modified_by,"string"),
    docstatus: safeValue(salesOrder?.docstatus,"number"),
    idx: safeValue(salesOrder?.idx,"number"),
    
    // Order information
    title: safeValue(salesOrder?.title,"string"),
    naming_series: safeValue(salesOrder?.naming_series,"string"),
    tax_id: safeValue(salesOrder?.tax_id,"string"),
    order_type: safeValue(salesOrder?.order_type,"string"),
    skip_delivery_note: safeValue(salesOrder?.skip_delivery_note,"string"),
    delivery_date: safeValue(salesOrder?.delivery_date,"date"),
    po_no: safeValue(salesOrder?.po_no,"string"),
    po_date: safeValue(salesOrder?.po_date,"date"),
    company: safeValue(salesOrder?.company,"string"),
    amended_from: safeValue(salesOrder?.amended_from,"string"),
    
    // Customer information
    customer_name: safeValue(salesOrder?.customer_name,"string"),
    order_number: safeValue(salesOrder?.order_number,"string"),
    transaction_date: safeValue(salesOrder?.transaction_date,"date"),
    real_order_date: safeValue(salesOrder?.real_order_date,"date"),
    cancelled_status: safeValue(salesOrder?.cancelled_status,"string"),
    financial_status: safeValue(salesOrder?.financial_status,"string"),
    fulfillment_status: safeValue(salesOrder?.fulfillment_status,"string"),
    expected_delivery_date: safeValue(salesOrder?.expected_delivery_date,"date"),
    cost_center: safeValue(salesOrder?.cost_center,"string"),
    project: safeValue(salesOrder?.project,"string"),
    
    // Currency and pricing
    currency: safeValue(salesOrder?.currency,"string"),
    conversion_rate: safeValue(salesOrder?.conversion_rate,"number"),
    selling_price_list: safeValue(salesOrder?.selling_price_list,"string"),
    price_list_currency: safeValue(salesOrder?.price_list_currency,"string"),
    plc_conversion_rate: safeValue(salesOrder?.plc_conversion_rate,"number"),
    ignore_pricing_rule: safeValue(salesOrder?.ignore_pricing_rule,"string"),
    scan_barcode: safeValue(salesOrder?.scan_barcode,"string"),
    set_warehouse: safeValue(salesOrder?.set_warehouse,"string"),
    reserve_stock: safeValue(salesOrder?.reserve_stock,"string"),
    
    // Discount and totals
    apply_discount_on: safeValue(salesOrder?.apply_discount_on,"string"),
    base_discount_amount: safeValue(salesOrder?.base_discount_amount,"number"),
    coupon_code: safeValue(salesOrder?.coupon_code,"string"),
    additional_discount_percentage: safeValue(salesOrder?.additional_discount_percentage,"number"),
    total_qty: safeValue(salesOrder?.total_qty,"number"),
    total: safeValue(salesOrder?.total,"number"),
    discount_amount: safeValue(salesOrder?.discount_amount,"number"),
    grand_total: safeValue(salesOrder?.grand_total,"number"),
    base_total: safeValue(salesOrder?.base_total,"number"),
    base_net_total: safeValue(salesOrder?.base_net_total,"number"),
    total_net_weight: safeValue(salesOrder?.total_net_weight,"number"),
    net_total: safeValue(salesOrder?.net_total,"number"),
    
    // Tax information
    tax_category: safeValue(salesOrder?.tax_category,"string"),
    taxes_and_charges: safeValue(salesOrder?.taxes_and_charges,"string"),
    shipping_rule: safeValue(salesOrder?.shipping_rule,"string"),
    incoterm: safeValue(salesOrder?.incoterm,"string"),
    named_place: safeValue(salesOrder?.named_place,"string"),
    base_total_taxes_and_charges: safeValue(salesOrder?.base_total_taxes_and_charges,"number"),
    total_taxes_and_charges: safeValue(salesOrder?.total_taxes_and_charges,"number"),
    base_grand_total: safeValue(salesOrder?.base_grand_total,"number"),
    base_rounding_adjustment: safeValue(salesOrder?.base_rounding_adjustment,"number"),
    base_rounded_total: safeValue(salesOrder?.base_rounded_total,"number"),
    base_in_words: safeValue(salesOrder?.base_in_words,"string"),
    rounding_adjustment: safeValue(salesOrder?.rounding_adjustment,"number"),
    rounded_total: safeValue(salesOrder?.rounded_total,"number"),
    in_words: safeValue(salesOrder?.in_words,"string"),
    advance_paid: safeValue(salesOrder?.advance_paid,"number"),
    disable_rounded_total: safeValue(salesOrder?.disable_rounded_total,"string"),
    other_charges_calculation: safeValue(salesOrder?.other_charges_calculation,"string"),

    // Contact and address information
    contact_person: safeValue(salesOrder?.contact_person,"string"),
    contact_display: safeValue(salesOrder?.contact_display,"string"),
    contact_phone: safeValue(salesOrder?.contact_phone,"string"),
    contact_mobile: safeValue(salesOrder?.contact_mobile,"string"),
    contact_email: safeValue(salesOrder?.contact_email,"string"),
    customer_address: safeValue(salesOrder?.customer_address,"string"),
    address_display: safeValue(salesOrder?.address_display,"string"),
    customer_group: safeValue(salesOrder?.customer_group,"string"),
    territory: safeValue(salesOrder?.territory,"string"),
    shipping_address_name: safeValue(salesOrder?.shipping_address_name,"string"),
    shipping_address: safeValue(salesOrder?.shipping_address,"string"),
    customer: safeValue(salesOrder?.customer,"string"),
    gender: safeValue(salesOrder?.gender,"string"),
    customer_type: safeValue(salesOrder?.customer_type,"string"),
    customer_personal_id: safeValue(salesOrder?.customer_personal_id,"string"),
    birth_date: safeValue(salesOrder?.birth_date,"date"),
    date_of_issuance: safeValue(salesOrder?.date_of_issuance,"date"),
    dispatch_address: safeValue(salesOrder?.dispatch_address,"string"),
    place_of_issuance: safeValue(salesOrder?.place_of_issuance,"string"),
    dispatch_address_name: safeValue(salesOrder?.dispatch_address_name,"string"),
    company_address: safeValue(salesOrder?.company_address,"string"),
    company_address_display: safeValue(salesOrder?.company_address_display,"string"),
    company_contact_person: safeValue(salesOrder?.company_contact_person,"string"),
    
    // Status information
    status: safeValue(salesOrder?.status,"string"),
    delivery_status: safeValue(salesOrder?.delivery_status,"string"),
    per_delivered: safeValue(salesOrder?.per_delivered,"number"),
    per_billed: safeValue(salesOrder?.per_billed,"number"),
    per_picked: safeValue(salesOrder?.per_picked,"number"),
    billing_status: safeValue(salesOrder?.billing_status,"string"),
    
    // Sales and commission
    sales_partner: safeValue(salesOrder?.sales_partner,"string"),
    amount_eligible_for_commission: safeValue(salesOrder?.amount_eligible_for_commission,"number"),
    commission_rate: safeValue(salesOrder?.commission_rate,"number"),
    total_commission: safeValue(salesOrder?.total_commission,"number"),
    loyalty_points: safeValue(salesOrder?.loyalty_points,"number"),
    loyalty_amount: safeValue(salesOrder?.loyalty_amount,"number"),
    from_date: safeValue(salesOrder?.from_date,"date"),
    to_date: safeValue(salesOrder?.to_date,"date"),
    auto_repeat: safeValue(salesOrder?.auto_repeat,"string"),
    
    // Print and display
    letter_head: safeValue(salesOrder?.letter_head,"string"),
    group_same_items: safeValue(salesOrder?.group_same_items,"string"),
    select_print_heading: safeValue(salesOrder?.select_print_heading,"string"),
    language: safeValue(salesOrder?.language,"string"),
    is_internal_customer: safeValue(salesOrder?.is_internal_customer,"string"),
    represents_company: safeValue(salesOrder?.represents_company,"string"),
    source: safeValue(salesOrder?.source,"string"),
    inter_company_order_reference: safeValue(salesOrder?.inter_company_order_reference,"string"),
    campaign: safeValue(salesOrder?.campaign,"string"),
    party_account_currency: safeValue(salesOrder?.party_account_currency,"string"),
    
    // Payment information
    total_amount: safeValue(salesOrder?.total_amount,"number"),
    expected_payment_date: safeValue(salesOrder?.expected_payment_date,"date"),
    paid_amount: safeValue(salesOrder?.paid_amount,"number"),
    balance: safeValue(salesOrder?.balance,"number"),
    payment_terms_template: safeValue(salesOrder?.payment_terms_template,"string"),
    tc_name: safeValue(salesOrder?.tc_name,"string"),
    terms: safeValue(salesOrder?.terms,"string"),
    
    // Haravan integration
    haravan_order_id: safeValue(salesOrder?.haravan_order_id,"string"),
    haravan_ref_order_id: safeValue(salesOrder?.haravan_ref_order_id,"string"),
    haravan_created_at: safeValue(salesOrder?.haravan_created_at,"date"),
    source_name: safeValue(salesOrder?.source_name,"string"),
    
    // JSONB fields - Prisma will handle JSON conversion automatically
    sales_team: safeValue(salesOrder?.sales_team,"string"),
    ref_sales_orders: safeValue(salesOrder?.ref_sales_orders,"string"),
    promotions: safeValue(salesOrder?.promotions,"string"),
    product_categories: safeValue(salesOrder?.product_categories,"string"),
    packed_items: safeValue(salesOrder?.packed_items,"string"),
    taxes: safeValue(salesOrder?.taxes,"string"),
    pricing_rules: safeValue(salesOrder?.pricing_rules,"string"),
    payment_records: safeValue(salesOrder?.payment_records,"string"),
    payment_schedule: safeValue(salesOrder?.payment_schedule,"string"),
    policies: safeValue(salesOrder?.policies,"string"),
    items: safeValue(salesOrder?.items,"string")
  };
};

export const mapSalesOrderItemToDatabase = (salesOrderItem) => {
  return ({
    name: salesOrderItem?.name || null,
    owner: salesOrderItem?.owner || null,
    creation: safeValue(salesOrderItem?.creation,"date"),
    modified: safeValue(salesOrderItem?.modified,"date"),
    modified_by: safeValue(salesOrderItem?.modified_by,"string"),
    docstatus: safeValue(salesOrderItem?.docstatus,"number"),
    idx: safeValue(salesOrderItem?.idx,"number"),
    item_name: safeValue(salesOrderItem?.item_name,"string"),
    variant_title: safeValue(salesOrderItem?.variant_title,"string"),
    sku: safeValue(salesOrderItem?.sku,"string"),
    barcode: safeValue(salesOrderItem?.barcode,"string"),
    haravan_variant_id: safeValue(salesOrderItem?.haravan_variant_id,"string"),
    ensure_delivery_based_on_produced_serial_no: safeValue(salesOrderItem?.ensure_delivery_based_on_produced_serial_no,"string"),
    is_stock_item: safeValue(salesOrderItem?.is_stock_item,"string"),
    reserve_stock: safeValue(salesOrderItem?.reserve_stock,"string"),
    qty: safeValue(salesOrderItem?.qty,"number"),
    stock_uom: safeValue(salesOrderItem?.stock_uom,"string"),
    uom: safeValue(salesOrderItem?.uom,"string"),
    conversion_factor: safeValue(salesOrderItem?.conversion_factor,"number"),
    stock_qty: safeValue(salesOrderItem?.stock_qty,"number"),
    stock_reserved_qty: safeValue(salesOrderItem?.stock_reserved_qty,"number"),
    price_list_rate: safeValue(salesOrderItem?.price_list_rate,"number"),
    base_price_list_rate: safeValue(salesOrderItem?.base_price_list_rate,"number"),
    discount_percentage: safeValue(salesOrderItem?.discount_percentage,"number"),
    discount_amount: safeValue(salesOrderItem?.discount_amount,"number"),
    distributed_discount_amount: safeValue(salesOrderItem?.distributed_discount_amount,"number"),
    base_rate_with_margin: safeValue(salesOrderItem?.base_rate_with_margin,"number"),
    margin_type: safeValue(salesOrderItem?.margin_type,"string"),
    margin_rate_or_amount: safeValue(salesOrderItem?.margin_rate_or_amount,"number"),
    rate_with_margin: safeValue(salesOrderItem?.rate_with_margin,"number"),
    rate: safeValue(salesOrderItem?.rate,"number"),
    amount: safeValue(salesOrderItem?.amount,"number"),
    base_rate: safeValue(salesOrderItem?.base_rate,"number"),
    base_amount: safeValue(salesOrderItem?.base_amount,"number"),
    stock_uom_rate: safeValue(salesOrderItem?.stock_uom_rate,"number"),
    is_free_item: safeValue(salesOrderItem?.is_free_item,"string"),
    grant_commission: safeValue(salesOrderItem?.grant_commission,"string"),
    net_rate: safeValue(salesOrderItem?.net_rate,"number"),
    net_amount: safeValue(salesOrderItem?.net_amount,"number"),
    base_net_rate: safeValue(salesOrderItem?.base_net_rate,"number"),
    base_net_amount: safeValue(salesOrderItem?.base_net_amount,"number"),
    billed_amt: safeValue(salesOrderItem?.billed_amt,"number"),
    valuation_rate: safeValue(salesOrderItem?.valuation_rate,"number"),
    gross_profit: safeValue(salesOrderItem?.gross_profit,"number"),
    delivered_by_supplier: safeValue(salesOrderItem?.delivered_by_supplier,"string"),
    weight_per_unit: safeValue(salesOrderItem?.weight_per_unit,"number"),
    total_weight: safeValue(salesOrderItem?.total_weight,"number"),
    against_blanket_order: safeValue(salesOrderItem?.against_blanket_order,"string"),
    blanket_order_rate: safeValue(salesOrderItem?.blanket_order_rate,"number"),
    actual_qty: safeValue(salesOrderItem?.actual_qty,"number"),
    company_total_stock: safeValue(salesOrderItem?.company_total_stock,"number"),
    projected_qty: safeValue(salesOrderItem?.projected_qty,"number"),
    ordered_qty: safeValue(salesOrderItem?.ordered_qty,"number"),
    planned_qty: safeValue(salesOrderItem?.planned_qty,"number"),
    production_plan_qty: safeValue(salesOrderItem?.production_plan_qty,"number"),
    work_order_qty: safeValue(salesOrderItem?.work_order_qty,"number"),
    delivered_qty: safeValue(salesOrderItem?.delivered_qty,"number"),
    produced_qty: safeValue(salesOrderItem?.produced_qty,"number"),
    returned_qty: safeValue(salesOrderItem?.returned_qty,"number"),
    picked_qty: safeValue(salesOrderItem?.picked_qty,"number"),
    page_break: safeValue(salesOrderItem?.page_break,"string"),
    item_tax_rate: safeValue(salesOrderItem?.item_tax_rate,"number"),
    transaction_date: safeValue(salesOrderItem?.transaction_date,"date"),
    cost_center: safeValue(salesOrderItem?.cost_center,"string"),
    parent: safeValue(salesOrderItem?.parent,"string"),
    parentfield: safeValue(salesOrderItem?.parentfield,"string"),
    parenttype: safeValue(salesOrderItem?.parenttype,"string"),
    doctype: safeValue(salesOrderItem?.doctype,"string")
  });
};

export const mapSalesTeamToDatabase = (salesTeam) => {
  return ({
    name: safeValue(salesTeam?.name,"string"),
    owner: safeValue(salesTeam?.owner,"string"),
    creation: safeValue(salesTeam?.creation,"date"),
    modified: safeValue(salesTeam?.modified,"date"),
    modified_by: safeValue(salesTeam?.modified_by,"string"),
    docstatus: safeValue(salesTeam?.docstatus,"number"),
    idx: safeValue(salesTeam?.idx,"number"),
    allocated_amount: safeValue(salesTeam?.allocated_amount,"number"),
    allocated_percentage: safeValue(salesTeam?.allocated_percentage,"number"),
    commission_rate: safeValue(salesTeam?.commission_rate,"number"),
    incentive: safeValue(salesTeam?.incentive,"number"),
    parentfield: safeValue(salesTeam?.parentfield,"string"),
    parent: safeValue(salesTeam?.parent,"string"),
    parenttype: safeValue(salesTeam?.parenttype,"string"),
    sales_person: safeValue(salesTeam?.sales_person,"string")
  });
};
