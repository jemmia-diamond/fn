model buyback_exchange_approval_instances {
  id               Int       @id @default(autoincrement())
  instance_code    String?   @unique @db.VarChar
  serial_number    String?   @db.VarChar
  instance_type    String?   @db.VarChar
  order_code       String?   @db.VarChar
  new_order_code   String?   @db.VarChar
  status           String?   @db.VarChar
  customer_name    String?   @db.VarChar
  phone_number     String?   @db.VarChar
  national_id      String?   @db.VarChar
  products_info    Json?
  reason           String?   @db.VarChar
  refund_amount    Decimal?  @db.Decimal
  is_synced_to_crm Boolean?
  created_at       DateTime? @db.Timestamp(6)
  updated_at       DateTime? @db.Timestamp(6)
  submitted_date   DateTime? @db.Timestamp(6)

  @@schema("larksuite")
}

model crm_lark_message {
  id                  String    @id @db.Uuid
  parent_id           String?   @db.Uuid
  crm_id              String?   @db.VarChar
  database_created_at DateTime? @default(now()) @db.Timestamp(6)
  database_updated_at DateTime? @default(now()) @db.Timestamp(6)
  lark_message_id     String?   @db.VarChar
  order_data_item     Json?     @db.Json
  order_id            BigInt?
  order_name          String?   @db.VarChar

  @@schema("larksuite")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cskh {
  instance_code  String?
  instance_type  String?
  order_code     String?
  new_order_code String?
  status         String?
  customer_name  String?
  phone_number   String?
  products_info  String?
  reason         String?
  refund_amount  Float?
  submitted_date DateTime? @db.Timestamp(6)

  @@ignore
  @@schema("larksuite")
}

model customer_appointments {
  uuid                           String    @id @db.VarChar
  id                             String?   @unique(map: "ix_larksuite_customer_appointments_id") @db.VarChar
  lead_sale_name                 String?   @db.VarChar
  lead_sale_email                String?   @db.VarChar
  suport_sale_name_list          String?
  suport_sale_email_list         String?
  store_name                     String?   @db.VarChar
  customer_name                  String?   @db.VarChar
  customer_phone                 String?   @db.VarChar
  customer_gender                String?   @db.VarChar
  channel                        String?   @db.VarChar
  order_status                   String?   @db.VarChar
  expected_visit_date            DateTime? @db.Timestamp(6)
  expected_visit_time_utc_plus_7 DateTime? @db.Timestamp(6)
  store_welcome_content          String?
  exchange_policy                String?
  note                           String?
  budget_range                   String?   @db.VarChar
  budget                         Decimal?  @db.Decimal(36, 8)
  created_at                     DateTime? @db.Timestamp(6)
  updated_at                     DateTime? @db.Timestamp(6)
  database_created_at            DateTime? @default(now()) @db.Timestamp(6)
  database_updated_at            DateTime? @default(now()) @db.Timestamp(6)

  @@index([uuid], map: "ix_larksuite_customer_appointments_uuid")
  @@schema("larksuite")
}

model departments {
  department_id        String  @id
  open_department_id   String? @unique
  name                 String?
  parent_department_id String?

  @@schema("larksuite")
}

model groups {
  group_id   String  @id
  group_name String?

  @@schema("larksuite")
}

model instances {
  uuid          String    @id
  serial_number String?   @unique
  instance_code String?   @unique
  approval_code String?
  approval_name String?
  status        String?
  department_id String?
  start_time    DateTime? @db.Timestamp(6)
  end_time      DateTime? @db.Timestamp(6)
  user_id       String?
  form          Json?
  form_data     Json?

  @@schema("larksuite")
}

model lark_line_items_payment {
  lark_record_id String @db.VarChar(255)
  order_id       String @db.VarChar(50)
  variant_id     String @db.VarChar

  @@id([order_id, variant_id])
  @@schema("larksuite")
}

model lark_order_qr_generator {
  haravan_order_id BigInt @id
  lark_record_id   String @db.VarChar(255)

  @@schema("larksuite")
}

model lark_variants {
  variant_id     BigInt  @id
  lark_record_id String? @db.VarChar(255)

  @@schema("larksuite")
}

model lark_warehouse_inventories {
  id                  Int       @id(map: "warehouse_inventories_lark_pkey") @unique(map: "ix_larksuite_warehouse_inventories_lark_id") @default(autoincrement())
  lark_record_id      String?   @db.VarChar
  qty_onhand          BigInt?
  qty_committed       BigInt?
  qty_available       BigInt?
  qty_incoming        BigInt?
  database_created_at DateTime? @default(now()) @db.Timestamp(6)
  database_updated_at DateTime? @default(now()) @db.Timestamp(6)

  @@schema("larksuite")
}

model promotion_approval {
  id                     Int       @id @default(autoincrement())
  order_code             String?   @db.VarChar
  reason                 String?   @db.VarChar
  customer_name          String?   @db.VarChar
  phone_number           String?   @db.VarChar
  order_amount           Decimal?  @db.Decimal
  order_request_discount Decimal?  @db.Decimal
  is_synced_to_crm       Boolean?  @default(false)
  created_at             DateTime? @db.Timestamp(6)
  updated_at             DateTime? @db.Timestamp(6)
  submitted_date         DateTime? @db.Timestamp(6)
  instance_code          String?   @unique(map: "instance_code_unique") @db.VarChar
  serial_number          String?   @db.VarChar

  @@schema("larksuite")
}

model shifts {
  shift_id   String  @id
  shift_name String?

  @@schema("larksuite")
}

model user_daily_shifts {
  day_no              Int
  group_id            String
  month               Int
  shift_id            String
  user_id             String
  database_created_at DateTime? @default(now()) @db.Timestamp(6)

  @@id([day_no, group_id, month, user_id])
  @@schema("larksuite")
}

model users {
  user_id             String   @id
  open_id             String?  @unique
  union_id            String?  @unique
  name                String?
  en_name             String?
  email               String?
  enterprise_email    String?
  gender              Int?
  city                String?
  country             String?
  department_ids      String[]
  description         String?
  employee_no         String?
  employee_type       Int?
  is_tenant_manager   Boolean?
  job_title           String?
  join_time           BigInt?
  leader_user_id      String?
  work_station        String?
  status_is_activated Boolean?
  status_is_exited    Boolean?
  status_is_frozen    Boolean?
  status_is_resigned  Boolean?
  status_is_unjoin    Boolean?
  avatar              Json?

  @@schema("larksuite")
}

model collections {
  id                  Int       @id @default(autoincrement())
  collection_name     String?
  created_at          DateTime? @db.Timestamp(6)
  updated_at          DateTime? @db.Timestamp(6)
  created_by          String?   @db.VarChar
  updated_by          String?   @db.VarChar
  database_updated_at DateTime? @default(now()) @db.Timestamp(6)
  database_created_at DateTime? @default(now()) @db.Timestamp(6)
  air                 String?
  designs             designs[]

  @@schema("workplace")
}

model design_details {
  id                   Int                    @id @default(autoincrement())
  gold_weight          Decimal                @default(0) @db.Decimal
  labour_cost          Decimal                @default(0) @db.Decimal
  shape_of_main_stone  String?
  main_stone_length    Decimal?               @db.Decimal
  main_stone_width     Decimal?               @db.Decimal
  melee_total_price    Decimal?               @db.Decimal
  design_melee_details design_melee_details[]

  @@schema("workplace")
}

model design_images {
  id                  Int       @id @default(autoincrement())
  design_id           Int?
  material_color      String?   @default("Vàng Trắng")
  retouch             String?
  database_created_at DateTime? @default(now()) @db.Timestamp(6)
  database_updated_at DateTime? @default(now()) @db.Timestamp(6)
  designs             designs?  @relation(fields: [design_id], references: [id], onDelete: Restrict, onUpdate: NoAction)

  @@unique([design_id, material_color], map: "unique_design_color")
  @@schema("workplace")
}

model design_melee_details {
  id               Int            @id @default(autoincrement())
  design_detail_id Int
  quantity         Int
  design_details   design_details @relation(fields: [design_detail_id], references: [id], onUpdate: NoAction, map: "fk_design_detail")

  @@schema("workplace")
}

model design_price_estimation {
  id                 Int      @id @default(autoincrement())
  code               String?
  ref_price          Decimal? @db.Decimal
  discount_ref_price Decimal? @db.Decimal
  design_id          Int?
  designs            designs? @relation(fields: [design_id], references: [id], onDelete: Restrict, onUpdate: NoAction)

  @@schema("workplace")
}

model design_set {
  id                  Int       @id @default(autoincrement())
  design_id           Int?
  set_id              Int?
  database_created_at DateTime? @default(now()) @db.Timestamp(6)
  database_updated_at DateTime? @default(now()) @db.Timestamp(6)
  designs             designs?  @relation(fields: [design_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  sets                sets?     @relation(fields: [set_id], references: [id], onDelete: Restrict, onUpdate: NoAction)

  @@schema("workplace")
}

model designs {
  id                      Int                       @id(map: "design_products_pkey") @unique(map: "unique_id_constraint") @default(autoincrement())
  code                    String?                   @unique(map: "unique_code_constraint")
  erp_code                String?
  backup_code             String?
  design_type             String?
  gender                  String?
  design_year             String?                   @default("2025")
  design_seq              BigInt?
  usage_status            String?
  link_4view              String?
  folder_summary          String?
  link_3d                 String?
  link_render             String?
  link_retouch            String?
  ring_band_type          String?
  ring_band_style         String?
  ring_head_style         String?
  jewelry_rd_style        String?
  shape_of_main_stone     String?
  product_line            String?
  social_post             Boolean?                  @default(false)
  website                 Boolean?                  @default(false)
  RENDER                  Boolean?
  RETOUCH                 Boolean?                  @default(false)
  gold_weight             Decimal?                  @db.Decimal
  main_stone              String?
  stone_quantity          String?
  stone_weight            String?
  diamond_holder          String?
  source                  String?
  variant_number          BigInt?                   @default(1)
  collections_id          Int?
  image_4view             String?
  image_render            String?
  image_retouch           String?
  created_by              String?                   @db.VarChar
  updated_by              String?                   @db.VarChar
  database_created_at     DateTime?                 @default(now()) @db.Timestamp(6)
  database_updated_at     DateTime?                 @default(now()) @db.Timestamp(6)
  collection_name         String?
  auto_create_folder      Boolean?
  design_code             String?
  ecom_showed             Boolean?                  @default(false)
  tag                     String?
  stock_locations         String?
  wedding_ring_id         Int?
  reference_code          String?
  design_status           String?                   @default("active")
  erp_code_duplicated     Boolean?                  @default(false)
  max_seq                 Int?
  last_synced_render      String?
  last_synced_4view       String?                   @default("")
  design_images           design_images[]
  design_price_estimation design_price_estimation[]
  design_set              design_set[]
  wedding_rings           wedding_rings?            @relation(fields: [wedding_ring_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  collections             collections?              @relation(fields: [collections_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_collection_designs_0ry69f9nc6")
  ecom_old_products       ecom_old_products[]
  jewelries               jewelries[]
  products                products?
  temporary_products      temporaryProducts[]

  @@unique([design_type, gender, diamond_holder, source, design_year, design_seq, variant_number], map: "design_code_attributes_unique")
  @@index([collections_id], map: "designs_collections_id_index")
  @@schema("workplace")
}

model designs_temporary_products {
  id             Int     @id
  design_code    String?
  design_type    String?
  gender         String?
  cover          String?
  link_render    String?
  code           String?
  erp_code       String?
  backup_code    String?
  lark_record_id String?

  @@schema("workplace")
}

model diamond_price_list {
  id                  Int       @id @default(autoincrement())
  database_created_at DateTime? @default(now()) @db.Timestamp(6)
  database_updated_at DateTime? @default(now()) @db.Timestamp(6)
  size                Decimal?  @db.Decimal
  color               String?
  clarity             String?
  carat               String?
  price               Decimal?  @db.Decimal

  @@schema("workplace")
}

model diamonds {
  id                          Int                  @id(map: "diamomds_pkey") @default(autoincrement())
  barcode                     String?              @unique(map: "unique_diamond_barcode")
  report_lab                  String?
  report_no                   BigInt?
  price                       Decimal?             @db.Decimal
  cogs                        Decimal?             @db.Decimal
  product_group               String?
  shape                       String?
  cut                         String?
  color                       String?
  clarity                     String?
  fluorescence                String?
  edge_size_1                 Float?               @db.Real
  edge_size_2                 Float?               @db.Real
  carat                       Decimal?             @db.Decimal
  created_at                  DateTime?            @db.Timestamp(6)
  updated_at                  DateTime?            @db.Timestamp(6)
  created_by                  String?              @db.VarChar
  updated_by                  String?              @db.VarChar
  database_updated_at         DateTime?            @default(now()) @db.Timestamp(6)
  database_created_at         DateTime?            @default(now()) @db.Timestamp(6)
  auto_create_haravan_product Boolean?             @default(false)
  product_id                  BigInt?
  variant_id                  BigInt?              @unique(map: "unique_variant_id")
  promotions                  String?              @default("CT nền giảm KCV 8%")
  link_haravan                String?
  note                        String?
  vendor                      String?
  published_scope             String?              @default("global")
  qty_onhand                  Float?               @db.Real
  qty_available               Float?               @db.Real
  qty_commited                Float?               @db.Real
  qty_incoming                Float?               @db.Real
  printing_batch              String?
  g1_collection_id            Int?
  haravan_collections         haravan_collections? @relation(fields: [g1_collection_id], references: [id], onDelete: Restrict, onUpdate: NoAction)

  @@index([variant_id], map: "idx_variant_id_workplace_diamonds")
  @@schema("workplace")
}

model ecom_360 {
  id         Int       @id @default(autoincrement())
  product_id Int?
  path       String?   @default("https://90814f99c119cd5dc08362580f81a76f.r2.cloudflarestorage.com/jemmia-images/glb/")
  file_name  String?
  products   products? @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: NoAction)

  @@schema("workplace")
}

model ecom_old_products {
  id              Int      @id @default(autoincrement())
  product_id      Int?
  variant_id      Int?
  published_scope String?  @db.VarChar(50)
  product_type    String?  @db.VarChar(50)
  template_suffix String?  @db.VarChar(50)
  title           String?  @db.VarChar(64)
  code            String?  @db.VarChar(50)
  shape           String?  @db.VarChar(50)
  color           String?  @db.VarChar(50)
  material        String?  @db.VarChar(50)
  band            String?  @db.VarChar(50)
  design_id       Int?
  designs         designs? @relation(fields: [design_id], references: [id], onDelete: Restrict, onUpdate: NoAction)

  @@schema("workplace")
}

model haravan_collections {
  id                    Int        @id(map: "product_collections_pkey") @default(autoincrement())
  collection_type       String?    @default("custom_collection")
  title                 String
  products_count        Int        @default(0)
  created_at            DateTime?  @db.Timestamp(6)
  updated_at            DateTime?  @db.Timestamp(6)
  haravan_id            BigInt?
  auto_create           Boolean?   @default(false)
  auto_add_product_type String?
  handle                String?
  diamonds              diamonds[]

  @@schema("workplace")
}

model hrv_locations_1 {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar

  @@schema("workplace")
}

model jewelries {
  id                          Int            @id @default(autoincrement())
  barcode                     String?        @unique(map: "unique_barcode_jewelries")
  category                    String?        @default("Trang sức")
  supplier_code               String?
  gold_weight                 Decimal?       @db.Decimal
  diamond_weight              Decimal?       @db.Decimal
  price                       Decimal?       @db.Decimal
  cogs                        Decimal?       @db.Decimal
  quantity                    Int?           @db.SmallInt
  order_code                  String?
  supplier                    String?
  note                        String?
  subcategory                 String?
  gender                      String?
  applique_material           String?
  fineness                    String?
  material_color              String?
  size_type                   String?
  ring_size                   Decimal?       @db.Decimal
  storage_size_type           String?
  storage_size_1              Decimal?       @db.Decimal
  storage_size_2              Decimal?       @db.Decimal
  design_id                   Int?
  created_at                  DateTime?      @db.Timestamp(6)
  updated_at                  DateTime?      @db.Timestamp(6)
  created_by                  String?        @db.VarChar
  updated_by                  String?        @db.VarChar
  database_updated_at         DateTime?      @default(now()) @db.Timestamp(6)
  database_created_at         DateTime?      @default(now()) @db.Timestamp(6)
  product_group               String?
  product_type                String?
  type                        String?
  design_code                 String?
  view                        String?        @map("4view")
  link_3d                     String?
  link_4view                  String?
  supply_product_type         String?
  stock                       BigInt?
  printing_batch              String?
  haravan_product_type        String?
  vendor                      String?
  promotions                  String?
  auto_create_haravan_product Boolean?       @default(false)
  variant_id                  BigInt?        @unique(map: "jewelries_unique_variant_id")
  product_id                  BigInt?
  link_haravan                String?
  qty_onhand                  Float?         @db.Real
  qty_commited                Float?         @db.Real
  qty_incoming                Float?         @db.Real
  qty_available               Float?         @db.Real
  published_scope             String?
  ring_pair_id                Int?
  infomation                  String?
  code_in_title               String?
  stored_sku                  String?
  designs                     designs?       @relation(fields: [design_id], references: [id], onUpdate: NoAction, map: "fk_designs")
  jewelries                   jewelries?     @relation("jewelriesTojewelries", fields: [ring_pair_id], references: [id], onUpdate: NoAction, map: "fk_ring_pairs")
  other_jewelries             jewelries[]    @relation("jewelriesTojewelries")
  size_details                size_details[]

  @@schema("workplace")
}

model materials {
  id           Int       @id @default(autoincrement())
  name         String
  created_at   DateTime? @db.Timestamp(6)
  updated_at   DateTime? @db.Timestamp(6)
  created_by   String?   @db.VarChar
  updated_by   String?   @db.VarChar
  market_price Decimal   @db.Decimal
  percentage   Float?

  @@schema("workplace")
}

model melee_diamonds {
  id                  Int       @id @default(autoincrement())
  haravan_product_id  Int?
  haravan_variant_id  Int?
  database_created_at DateTime? @default(now()) @db.Timestamp(6)
  database_updated_at DateTime? @default(now()) @db.Timestamp(6)
  length              Decimal?  @db.Decimal
  width               Decimal?  @db.Decimal
  sku                 String?
  barcode             String?
  shape               String?

  @@schema("workplace")
}

model moissanite {
  id                 Int                  @id @default(autoincrement())
  product_group      String?
  shape              String?
  length             Decimal?             @db.Decimal
  width              Decimal?             @db.Decimal
  color              String?
  clarity            String?              @default("Không phân loại")
  fluorescence       String?              @default("Không phân loại")
  cut                String?              @default("Không phân loại")
  polish             String?              @default("Không phân loại")
  symmetry           String?              @default("Không phân loại")
  haravan_product_id BigInt?
  haravan_variant_id BigInt?
  auto_create        Boolean?             @default(false)
  price              Decimal?             @default(0) @db.Decimal
  barcode            String?              @unique
  moissanite_serials moissanite_serials[]

  @@unique([product_group, shape, length, width, color, clarity, fluorescence, cut, polish, symmetry], map: "unique_moissannite_sku_attributes")
  @@schema("workplace")
}

model moissanite_serials {
  id                  Int         @id @default(autoincrement())
  final_encoded_rfid  String?     @unique(map: "unique_final_encoded_rfid")
  moissanite_id       Int?
  database_updated_at DateTime?   @default(now()) @db.Timestamp(6)
  database_created_at DateTime?   @default(now()) @db.Timestamp(6)
  moissanite          moissanite? @relation(fields: [moissanite_id], references: [id], onDelete: Restrict, onUpdate: NoAction)

  @@schema("workplace")
}

model products {
  id                    Int        @id @default(autoincrement())
  haravan_product_id    BigInt?    @unique(map: "uniqe_product_id")
  created_at            DateTime?  @db.Timestamp(6)
  updated_at            DateTime?  @db.Timestamp(6)
  created_by            String?    @db.VarChar
  updated_by            String?    @db.VarChar
  nc_order              Decimal?   @db.Decimal
  vendor                String?    @default("Jemmia")
  haravan_product_type  String?
  design_id             Int?    @unique(map: "unique_design_id")
  published_scope       String?    @default("pos")
  database_updated_at   DateTime?  @default(now()) @db.Timestamp(6)
  database_created_at   DateTime?  @default(now()) @db.Timestamp(6)
  template_suffix       String?
  handle                String?
  auto_create_haravan   Boolean?   @default(false)
  note                  String?
  web_url               String?
  ecom_title            String?
  g1_promotion          String?    @default("16%")
  published             String?
  estimated_gold_weight Decimal?   @db.Decimal
  has_360               Boolean?   @default(false)
  ecom_360              ecom_360[]
  designs               designs?   @relation(fields: [design_id], references: [id], onDelete: Restrict, onUpdate: NoAction, map: "fk_product_design")
  variants              variants[]

  @@index([nc_order], map: "products_order_idx")
  @@schema("workplace")
}

model promotions {
  id                  Int       @id @default(autoincrement())
  name                String?
  created_at          DateTime? @db.Timestamp(6)
  updated_at          DateTime? @db.Timestamp(6)
  created_by          String?   @db.VarChar
  updated_by          String?   @db.VarChar
  database_updated_at DateTime? @default(now()) @db.Timestamp(6)
  database_created_at DateTime? @default(now()) @db.Timestamp(6)
  starts_at           DateTime? @db.Timestamp(6)
  ends_at             DateTime? @db.Timestamp(6)
  take_type           String?
  set_time_active     DateTime? @db.Timestamp(6)
  status              String?
  value               BigInt?
  products_selection  String?
  promotion_id        BigInt?
  link_to_admind      String?

  @@schema("workplace")
}

model sets {
  id                  Int          @id @default(autoincrement())
  set_name            String?
  database_created_at DateTime?    @default(now()) @db.Timestamp(6)
  database_updated_at DateTime?    @default(now()) @db.Timestamp(6)
  design_codes        String?
  haravan_product_id  Int?
  haravan_variant_id  Int?
  note                String?
  main_image_link     String?
  design_set          design_set[]

  @@schema("workplace")
}

model size_details {
  id                  Int        @id @default(autoincrement())
  panel_size_type     String?
  length              Decimal?   @db.Decimal
  quantity            BigInt?
  jewelry_id          Int?
  created_at          DateTime?  @db.Timestamp(6)
  updated_at          DateTime?  @db.Timestamp(6)
  created_by          String?    @db.VarChar
  updated_by          String?    @db.VarChar
  database_updated_at DateTime?  @default(now()) @db.Timestamp(6)
  database_created_at DateTime?  @default(now()) @db.Timestamp(6)
  width               Decimal?   @db.Decimal
  jewelries           jewelries? @relation(fields: [jewelry_id], references: [id], onUpdate: NoAction, map: "fk_jewelries")

  @@schema("workplace")
}

model submitted_codes {
  id                  Int       @id @default(autoincrement())
  codes               String
  created_by          String?   @db.VarChar
  notes               String?
  database_updated_at DateTime? @default(now()) @db.Timestamp(6)
  database_created_at DateTime? @default(now()) @db.Timestamp(6)
  tag                 String?

  @@schema("workplace")
}

model temporary_products_web {
  id                      BigInt   @id @default(autoincrement())
  customer_name           String?  @db.VarChar
  customer_phone          String?  @db.VarChar
  original_hrv_product_id String?  @db.VarChar
  original_hrv_variant_id String?  @db.VarChar
  token                   String?  @db.VarChar
  title                   String?  @db.VarChar
  price                   BigInt?
  line_price              BigInt?
  price_original          BigInt?
  line_price_orginal      BigInt?
  quantity                Int?
  sku                     String?  @db.VarChar
  grams                   Float?
  product_type            String?  @db.VarChar
  vendor                  String?  @db.VarChar
  properties              Json?
  gift_card               Boolean?
  url                     String?  @db.VarChar
  image                   String?  @db.VarChar
  handle                  String?  @db.VarChar
  requires_shipping       Boolean?
  not_allow_promotion     Boolean?
  product_title           String?  @db.VarChar
  barcode                 String?  @db.VarChar
  product_description     String?  @db.VarChar
  variant_title           String?  @db.VarChar
  variant_options         Json?
  promotionref            String?  @db.VarChar
  promotionby             Json?
  haravan_product_id      BigInt?
  haravan_variant_id      BigInt?

  @@schema("workplace")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model temtab {
  design_code String? @unique
  link_3d     String?
  column3     String? @db.VarChar(50)
  column4     String? @db.VarChar(50)
  column5     String? @db.VarChar(50)
  column6     String? @db.VarChar(50)
  column7     String? @db.VarChar(50)
  column8     String? @db.VarChar(50)
  column9     String? @db.VarChar(50)
  column10    String? @db.VarChar(50)
  column11    String? @db.VarChar(50)
  column12    String? @db.VarChar(50)
  column13    String? @db.VarChar(50)
  column14    String? @db.VarChar(50)
  column15    String? @db.VarChar(50)
  column16    String? @db.VarChar(50)
  column17    String? @db.VarChar(50)
  column18    String? @db.VarChar(50)
  column19    String? @db.VarChar(50)
  column20    String? @db.VarChar(50)

  @@ignore
  @@schema("workplace")
}

model variant_serials {
  id                        Int                @id @default(autoincrement())
  variant_id                Int?
  created_at                DateTime?          @db.Timestamp(6)
  updated_at                DateTime?          @db.Timestamp(6)
  created_by                String?            @db.VarChar
  updated_by                String?            @db.VarChar
  nc_order                  Decimal?           @db.Decimal
  serial_number             String?            @unique(map: "unique_serial_number")
  printing_batch            String?
  encode_barcode            String?
  final_encoded_barcode     String?            @unique(map: "unique_final_encode_barcode")
  old_encode_barcode        String?
  old_finnal_encode_barcode String?
  gold_weight               Decimal?           @db.Decimal
  diamond_weight            Decimal?           @db.Decimal
  old_variant_id            BigInt?
  old_product_id            BigInt?
  quantity                  Decimal?           @db.Decimal
  supplier                  String?
  database_updated_at       DateTime?          @default(now()) @db.Timestamp(6)
  database_created_at       DateTime?          @default(now()) @db.Timestamp(6)
  cogs                      Decimal?           @db.Decimal
  old_barcode               String?
  order_on                  String?
  stock_id                  BigInt?
  order_id                  BigInt?
  storage_size_type         String?
  storage_size_1            Decimal?           @db.Decimal
  storage_size_2            Decimal?           @db.Decimal
  note                      String?
  stock_at                  String?
  order_reference           String?
  last_rfid_scan_time       DateTime?          @db.Timestamptz(6)
  fulfillment_status_value  String?
  lark_record_id            String?
  arrival_date              DateTime?          @db.Date
  actual_gold_price         Decimal?           @db.Decimal
  actual_melee_price        Decimal?           @db.Decimal
  actual_labor_cost         Decimal?           @db.Decimal
  temporary_products        temporaryProducts?
  variants                  variants?          @relation(fields: [variant_id], references: [id], onDelete: Restrict, onUpdate: NoAction, map: "fk_variants_variant_serials")

  @@unique([serial_number, final_encoded_barcode], map: "unique_serial_number_final_encoded_barcode")
  @@index([nc_order], map: "variant_serials_order_idx")
  @@schema("workplace")
}

model variant_serials_lark {
  id             Int       @id
  lark_record_id String?
  db_created_at  DateTime? @default(now()) @db.Timestamp(6)

  @@schema("workplace")
}

model variants {
  id                     Int               @id @default(autoincrement())
  haravan_variant_id     BigInt?           @unique(map: "uniqe_variant_id")
  created_at             DateTime?         @db.Timestamp(6)
  updated_at             DateTime?         @db.Timestamp(6)
  created_by             String?           @db.VarChar
  updated_by             String?           @db.VarChar
  nc_order               Decimal?          @db.Decimal
  product_id             Int?
  barcode                String?           @unique(map: "unique_barcode")
  inventory_quantity     BigInt?
  old_inventory_quantity BigInt?
  sku                    String?           @unique(map: "unique_sku")
  qty_available          BigInt?
  qty_onhand             BigInt?
  qty_commited           BigInt?
  qty_incoming           BigInt?
  category               String?           @default("Trang sức")
  applique_material      String?
  fineness               String?
  material_color         String?
  size_type              String?
  ring_size              Decimal?          @db.Decimal
  database_updated_at    DateTime?         @default(now()) @db.Timestamp(6)
  database_created_at    DateTime?         @default(now()) @db.Timestamp(6)
  haravan_product_id     BigInt?
  price                  Decimal?          @db.Decimal
  auto_create_variant    Boolean?          @default(false)
  note                   String?
  estimated_gold_weight  Float?            @db.Real
  variant_serials        variant_serials[]
  products               products?         @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: NoAction, map: "fk_variants_products")

  @@unique([product_id, category, applique_material, fineness, material_color, size_type, ring_size], map: "unique_sku_attributes")
  @@index([haravan_variant_id], map: "idx_harvan_variant_id_workplace_variants")
  @@index([nc_order], map: "variants_order_idx")
  @@schema("workplace")
}

model wedding_rings {
  id          Int       @id @default(autoincrement())
  description String?
  ecom_title  String?
  designs     designs[]

  @@schema("workplace")
}
